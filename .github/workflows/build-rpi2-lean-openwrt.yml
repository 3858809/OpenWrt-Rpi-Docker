#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: Build Raspberry Pi OpenWrt Docker Image

on: 
  release:
    types: [published]
  push:
    branches: 
      - master
    paths:
      - 'config/rpi-openwrt-docker.config'
  schedule:
    - cron: 0 18 * * *
#  watch:
#    types: [started]

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: config/rpi-openwrt-docker.config
  DIY_SH: scripts/lean-openwrt.sh
  TZ: Asia/Shanghai
  TARGET: bcm27xx
  SUBTARGET: bcm2709
  DEVICE: openwrt-bcm27xx-bcm2709-rpi-2
  SSH_ACTIONS: false
  UPLOAD_ROOTFS: true
  UPLOAD_WETRANSFER: true
  UPLOAD_COWTRANSFER: true


jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo swapoff /swapfile
        sudo rm -rf /swapfile /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler gperf antlr3
        curl -fsSL https://raw.githubusercontent.com/P3TERX/dotfiles/master/.bashrc >> ~/.bashrc

    - name: Clone Source Code
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

    - name: Update Feeds
      run: |
       cd openwrt
       echo "src-git lienol https://github.com/SuLingGG/openwrt-package" >> feeds.conf.default
       ./scripts/feeds update -a

    - name: Install Feeds
      run: cd openwrt && ./scripts/feeds install -a
      
    - name: Load Custom Configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_SH
        cd openwrt
        ../$DIY_SH
        make defconfig
        
    - name: SSH Connection To Actions
      uses: P3TERX/debugger-action@master
      if: env.SSH_ACTIONS == 'true'

    - name: Download Package
      id: package
      run: |
        cd openwrt
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile The Firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) IGNORE_ERRORS=1 || make -j1 V=s IGNORE_ERRORS=1
        echo "::set-output name=status::success"

    - name: Upload RootFS Archive
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_ROOTFS == 'true'
      with:
        name: ${{ env.DEVICE }}-rootfs.tar.gz
        path: openwrt/bin/targets/${{ env.TARGET }}/${{ env.SUBTARGET }}/${{ env.DEVICE }}-rootfs.tar.gz
        
    - name: Organize Files
      id: organize
      if: steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "::set-env name=FIRMWARE::$PWD"
        echo "::set-output name=status::success"

    - name: Upload Firmware to Cowtransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 99 -t 3 --hash --no-progress ${FIRMWARE} 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"

    - name: Upload Firmware to WeTransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
        
    - name: Docker Hub Login
      run: docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PWD }}

    - name: Aliyun Docker Registry Login
      run: docker login -u ${{ secrets.ALIYUN_USERNAME }} -p ${{ secrets.ALIYUN_PWD }} registry.cn-shanghai.aliyuncs.com

    - name: Build Docker Image
      run: |
        cd openwrt/bin/targets/$TARGET/$SUBTARGET/
        docker import $DEVICE-rootfs.tar.gz ${{ secrets.DOCKER_HUB_USERNAME }}/openwrt:beta

    - name: Push Docker Image To Docker Hub
      run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/openwrt:beta
      
    - name: Push Docker Image To Aliyun Docker Registry
      run: |
        docker tag ${{ secrets.DOCKER_HUB_USERNAME }}/openwrt:beta registry.cn-shanghai.aliyuncs.com/${{ secrets.ALIYUN_NAMESPACES }}/openwrt:beta
        docker push registry.cn-shanghai.aliyuncs.com/${{ secrets.ALIYUN_NAMESPACES }}/openwrt:beta
